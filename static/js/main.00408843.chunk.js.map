{"version":3,"sources":["Button.module.scss","Layout.module.scss","Display.js","Button.js","Layout.js","App.js","index.js"],"names":["module","exports","Display","fontSize","topValue","bottomValue","bn","length","tn","className","id","style","ButtonBase","keyCodes","value","onClick","props","inputEl","useRef","useEffect","handleKeyDown","e","preventDefault","includes","keyCode","key","setTimeout","current","classList","toggle","classes","keydown","window","addEventListener","removeEventListener","ref","type","Base","join","GridButton","Grid","LargeButton","Large","defaultProps","Layout","top","middle","bottom","container","App","useState","currentValue","setCurrentValue","memoryValue","setMemoryValue","lastClicked","setLastClicked","lastOperatorUsed","setLastOperatorUsed","history","setHistory","isDisabled","setIsDisabled","handleDigit","digit","currentValueReachedLimit","handleOperator","operator","slice","Math","sqrt","toString","parseFloat","concat","updateResult","calculate","console","log","a","b","operation","result","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.00408843.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Base\":\"Button_Base__21gMy\",\"Grid\":\"Button_Grid__a53f4\",\"keydown\":\"Button_keydown__1nbae\",\"Large\":\"Button_Large__2kPLq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__38Lkv\",\"container\":\"Layout_container__16WeW\",\"top\":\"Layout_top__3LtGr\",\"middle\":\"Layout_middle__1LAF8\",\"bottom\":\"Layout_bottom__2ZrJp\"};","import React from 'react';\r\nimport './Display.scss';\r\n\r\nexport default function Display({ topValue, bottomValue }) {\r\n\r\n  // Decrease bottom font size\r\n  let fontSize, bn = bottomValue.length, tn = topValue.length;\r\n  if (bn > 8) fontSize = '4.5rem';\r\n  if (bn > 10) fontSize = '3.5rem';\r\n  if (bn > 13) fontSize = '2.5rem';\r\n  if (bn > 19 || tn > 40) fontSize = '2rem';\r\n\r\n  return (\r\n    <div className=\"Display\">\r\n      <div className=\"top\">{topValue}</div>\r\n      <div id=\"display\" className=\"bottom\" style={{ fontSize }}>\r\n        {bottomValue}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport classes from './Button.module.scss';\r\n\r\nfunction ButtonBase({ className, keyCodes, value, onClick, ...props }) {\r\n  const inputEl = useRef();\r\n\r\n  // Click\r\n  const handleClick = () => {\r\n    onClick(value);\r\n  };\r\n\r\n  // Add/remove event listeners\r\n  useEffect(() => {\r\n    \r\n    // Key down\r\n    const handleKeyDown = (e) => {\r\n      e.preventDefault();\r\n\r\n      if (keyCodes.includes(e.keyCode) || e.key === value) {\r\n        onClick(value);\r\n\r\n        // Imitate hover and active state when pressing button\r\n        setTimeout(() => {\r\n          inputEl.current.classList.toggle(classes.keydown);\r\n        }, 100);\r\n        inputEl.current.classList.toggle(classes.keydown);\r\n      }\r\n    };\r\n    window.addEventListener('keydown', handleKeyDown);\r\n\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, [keyCodes, value, onClick]);\r\n\r\n  return (\r\n    <input\r\n      ref={inputEl}\r\n      type=\"button\"\r\n      value={value}\r\n      className={[classes.Base, className].join(' ')}\r\n      onClick={handleClick}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nButtonBase.defaultProps = {\r\n  keyCodes: [],\r\n};\r\n\r\n// I'm taking id out and assign it to each button as class name\r\n// to have easy access to each individual button\r\nexport function GridButton({ id, ...props }) {\r\n  return (\r\n    <ButtonBase id={id} className={[id, classes.Grid].join(' ')} {...props} />\r\n  );\r\n}\r\n\r\nexport function LargeButton(props) {\r\n  return <ButtonBase className={classes.Large} {...props} />;\r\n}\r\n","import React from 'react';\r\nimport classes from './Layout.module.scss';\r\n\r\nexport default function Layout({ top, middle, bottom }) {\r\n  return (\r\n    <div className={classes.Layout}>\r\n    <div className={classes.container}>\r\n      <div className={classes.top}>\r\n        {top}\r\n      </div>\r\n      <div className={classes.middle}>\r\n        {middle}\r\n      </div>\r\n      <div className={classes.bottom}>\r\n        {bottom}\r\n      </div>\r\n    </div>\r\n    </div>\r\n  )\r\n}","import React, { useState } from 'react';\r\n\r\nimport Display from './Display';\r\nimport { GridButton, LargeButton } from './Button';\r\nimport Layout from './Layout';\r\n\r\nconst DIGIT = 'DIGIT';\r\nconst OPERATOR = 'OPERATOR';\r\n\r\nexport default function App() {\r\n  const [currentValue, setCurrentValue] = useState('0');\r\n  const [memoryValue, setMemoryValue] = useState(null);\r\n  const [lastClicked, setLastClicked] = useState(null);\r\n  const [lastOperatorUsed, setLastOperatorUsed] = useState(null);\r\n  const [history, setHistory] = useState([]);\r\n  const [isDisabled, setIsDisabled] = useState(false);\r\n\r\n  // DIGIT\r\n  const handleDigit = (digit) => {\r\n    if (isDisabled) return;\r\n    if (currentValueReachedLimit()) return;\r\n\r\n    // Prevent multiple zeros\r\n    if (digit === '00' && (currentValue === '0' || lastClicked === OPERATOR)) return;\r\n\r\n    // Append zero before decimal point\r\n    if (digit === '.' && currentValue === '0') {\r\n      setCurrentValue('0.');\r\n    }\r\n\r\n    // If clicked on decimal and there is already decimal point\r\n    if (digit === '.' && currentValue.includes('.')) return;\r\n\r\n    // Clicked on digit right after clicking on equals\r\n    if (lastOperatorUsed === '=') {\r\n      setCurrentValue(digit === '.' ? '0.' : digit);\r\n      setMemoryValue(null);\r\n      setLastOperatorUsed(null);\r\n      setHistory([]);\r\n\r\n      // When current value is zero or is empty (after clearing negative operator)\r\n    } else if (currentValue === '0' || currentValue === '') {\r\n      setCurrentValue(digit);\r\n\r\n      // When previously clicked on digit or current value is negative sign\r\n    } else if (lastClicked === DIGIT || currentValue === '-') {\r\n      // Append clicked number to the end\r\n      setCurrentValue(currentValue + digit);\r\n\r\n      // When last time clicked on operator\r\n    } else if (lastClicked === OPERATOR) {\r\n      // If clicked on decimal after clicking on operator\r\n      if (digit === '.') {\r\n        setCurrentValue('0' + digit);\r\n      } else {\r\n        setCurrentValue(digit);\r\n      }\r\n\r\n      // Store current value in memory and set current value to clicked digit\r\n      if (lastOperatorUsed !== '√') {\r\n        setMemoryValue(currentValue);\r\n      }\r\n    }\r\n\r\n    setLastClicked(DIGIT);\r\n  };\r\n\r\n  // OPERATOR\r\n  const handleOperator = (operator) => {\r\n    if (isDisabled) return;\r\n    if (currentValue.slice(-1) === '.') return;\r\n\r\n    // Clicked the same operator twice, do nothing\r\n    if (lastClicked === OPERATOR && lastOperatorUsed === operator) return;\r\n\r\n    // Clicked on square root right after clicking on equals\r\n    if (operator === '√' && lastOperatorUsed === '=') {\r\n      setHistory(['√' + currentValue]);\r\n      setCurrentValue(Math.sqrt(currentValue).toString());\r\n      setLastOperatorUsed('√');\r\n    }\r\n    // Clicked square root and nothing is in memory\r\n    else if (operator === '√' && memoryValue === null) {\r\n      // Calculate the value and append to history\r\n      setCurrentValue(Math.sqrt(currentValue).toString());\r\n      // setHistory(history.concat(\"√\" + currentValue));\r\n      setHistory(['√' + currentValue]);\r\n\r\n      setLastClicked(OPERATOR);\r\n      setLastOperatorUsed('√');\r\n      return;\r\n\r\n      // Clicked on square root and something is in memory\r\n    } else if (operator === '√' && memoryValue) {\r\n      setCurrentValue(\r\n        (Math.sqrt(currentValue) + parseFloat(memoryValue)).toString()\r\n      );\r\n      setHistory(history.concat('√' + currentValue));\r\n      setMemoryValue(null);\r\n      setLastOperatorUsed('√');\r\n\r\n      // Last clicked was square root\r\n    } else if (lastOperatorUsed === '√') {\r\n      // Append new operator to history\r\n      setHistory(history.concat(operator));\r\n      setLastOperatorUsed(operator);\r\n      setMemoryValue(currentValue);\r\n    }\r\n    // Right after clicking on equals clicked on operator\r\n    else if (lastOperatorUsed === '=') {\r\n      setMemoryValue(currentValue);\r\n      setHistory([currentValue, operator]);\r\n      setLastOperatorUsed(operator);\r\n\r\n      // When repeatedly clicking on operators\r\n    } else if (lastClicked === OPERATOR) {\r\n      // Last time clicked on operator and then on subtract\r\n      if (operator === '-') {\r\n        // Set current to negative value\r\n        setCurrentValue('-');\r\n      } else {\r\n        // Last time changed the value to negative and clicked operator\r\n        // again, so the user wants to change the operation\r\n        if (currentValue === '-') {\r\n          // Remove negative sign from current value\r\n          setCurrentValue('');\r\n        }\r\n        // Update operator clicked\r\n        setLastOperatorUsed(operator);\r\n        // Update history\r\n        setHistory(history.slice(0, -1).concat(operator));\r\n      }\r\n\r\n      // Last time clicked on a digit\r\n    } else if (lastClicked === DIGIT) {\r\n      updateResult();\r\n      setHistory(history.concat([currentValue, operator]));\r\n      setLastOperatorUsed(operator);\r\n    }\r\n\r\n    setLastClicked(OPERATOR);\r\n  };\r\n\r\n  // EQUALS\r\n  const handleEquals = () => {\r\n    if (isDisabled) return;\r\n\r\n    // If last clicked on equals or there is nothing to calculate\r\n    if (lastOperatorUsed === '=' || lastOperatorUsed === null) return;\r\n\r\n    // User is trying to divide by zero\r\n    if (lastOperatorUsed === '/' && currentValue === '0') {\r\n      setTimeout(() => {\r\n        setCurrentValue('0');\r\n        setIsDisabled(false);\r\n      }, 1000)\r\n      setCurrentValue('You cannot divide by zero');\r\n      setMemoryValue(null);\r\n      setHistory([]);\r\n      setIsDisabled(true);\r\n      setLastClicked(null);\r\n      setLastOperatorUsed(null);\r\n      return;\r\n    };\r\n\r\n    // Last clicked on square root, already has the result\r\n    if (lastOperatorUsed === '√') {\r\n      setLastOperatorUsed(history.concat(['=', currentValue]));\r\n\r\n      // Clicked on equals right after clicking on operator\r\n    } else if (lastClicked === OPERATOR && !memoryValue) {\r\n      setHistory(history.slice(0, -1).concat(['=', currentValue]));\r\n\r\n    } else {\r\n      \r\n      // Update current value and history\r\n      updateResult();\r\n      setHistory(\r\n        history.concat([\r\n          currentValue,\r\n          '=',\r\n          calculate(memoryValue, currentValue, lastOperatorUsed),\r\n        ])\r\n      );\r\n    }\r\n\r\n    setLastClicked(OPERATOR);\r\n    setLastOperatorUsed('=');\r\n  };\r\n\r\n  // CLEAR\r\n  const handleClear = () => {\r\n    if (isDisabled) return;\r\n    console.log(\"WHY\");\r\n\r\n    setCurrentValue('0');\r\n    setMemoryValue(null);\r\n    setHistory([]);\r\n    setLastClicked(null);\r\n    setLastOperatorUsed(null);\r\n  };\r\n\r\n  // DELETE\r\n  const handleDelete = () => {\r\n    if (isDisabled) return;\r\n    if (lastClicked === OPERATOR) return;\r\n\r\n    // Last clicked on equals\r\n    if (lastOperatorUsed === '=') {\r\n      setMemoryValue(null);\r\n      setHistory([]);\r\n\r\n      // Current value is just one digit\r\n    } else if (currentValue.length === 1) {\r\n      setCurrentValue('0');\r\n    } else {\r\n      // Remove last digit\r\n      setCurrentValue(currentValue.slice(0, -1));\r\n    }\r\n  };\r\n\r\n  // PLUS/MINUS\r\n  const handlePlusMinus = () => {\r\n    if (isDisabled) return;\r\n\r\n    // Append/remove minus sign\r\n    setCurrentValue(\r\n      currentValue[0] === '-' ? currentValue.slice(1) : '-' + currentValue\r\n    );\r\n  };\r\n\r\n  // Updates result\r\n  const updateResult = () => {\r\n    // There is something in memory\r\n    if (memoryValue) {\r\n      // Calculate the result and clear memory\r\n      setCurrentValue(calculate(memoryValue, currentValue, lastOperatorUsed));\r\n      setMemoryValue(null);\r\n    } else {\r\n      // There is nothing in memory so update memory\r\n      setMemoryValue(currentValue);\r\n    }\r\n  };\r\n\r\n  // Digit limit\r\n  const currentValueReachedLimit = () => {\r\n    if (currentValue.length >= 23 && lastClicked === DIGIT) {\r\n      setTimeout(() => {\r\n        setCurrentValue(currentValue);\r\n        setIsDisabled(false);\r\n      }, 1000);\r\n\r\n      setCurrentValue('LIMIT REACHED');\r\n      setIsDisabled(true);\r\n      return true;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout\r\n      top={<Display topValue={history.join(' ')} bottomValue={currentValue} />}\r\n      middle={\r\n        <>\r\n          <GridButton id=\"clear\" keyCodes={[46]} value=\"AC\" onClick={handleClear} />\r\n          <GridButton keyCodes={[8]} value=\"DEL\" onClick={handleDelete} />\r\n          <GridButton id=\"plus-minus\" value=\"+/-\" onClick={handlePlusMinus} />\r\n          <GridButton\r\n            id=\"sqrt\"\r\n            value=\"&radic;\"\r\n            onClick={handleOperator}\r\n          />\r\n\r\n          <GridButton id=\"seven\" keyCodes={[55,103]} value=\"7\" onClick={handleDigit} />\r\n          <GridButton id=\"eight\" keyCodes={[56,104]} value=\"8\" onClick={handleDigit} />\r\n          <GridButton id=\"nine\" keyCodes={[57,105]} value=\"9\" onClick={handleDigit} />\r\n          <GridButton\r\n            id=\"divide\"\r\n            keyCodes={[111,191]}\r\n            value=\"/\"\r\n            onClick={handleOperator}\r\n          />\r\n\r\n          <GridButton id=\"four\" keyCodes={[52,100]} value=\"4\" onClick={handleDigit} />\r\n          <GridButton id=\"five\" keyCodes={[53,101]} value=\"5\" onClick={handleDigit} />\r\n          <GridButton id=\"six\" keyCodes={[54,102]} value=\"6\" onClick={handleDigit} />\r\n          <GridButton\r\n            id=\"multiply\"\r\n            keyCodes={[106, 56]}\r\n            value=\"x\"\r\n            onClick={handleOperator}\r\n          />\r\n\r\n          <GridButton id=\"one\" keyCodes={[49,97]} value=\"1\" onClick={handleDigit} />\r\n          <GridButton id=\"two\" keyCodes={[50,98]} value=\"2\" onClick={handleDigit} />\r\n          <GridButton id=\"three\" keyCodes={[51,99]} value=\"3\" onClick={handleDigit} />\r\n          <GridButton\r\n            id=\"subtract\"\r\n            keyCodes={[189,109]}\r\n            value=\"-\"\r\n            onClick={handleOperator}\r\n          />\r\n\r\n          <GridButton id=\"zero\" keyCodes={[48,96]} value=\"0\" onClick={handleDigit} />\r\n          <GridButton\r\n            id=\"double-zero\"\r\n            value=\"00\"\r\n            onClick={handleDigit}\r\n          />\r\n          <GridButton\r\n            id=\"decimal\"\r\n            keyCodes={[190,110]}\r\n            value=\".\"\r\n            onClick={handleDigit}\r\n          />\r\n          <GridButton\r\n            id=\"add\"\r\n            keyCodes={[107]}\r\n            value=\"+\"\r\n            onClick={handleOperator}\r\n          />\r\n        </>\r\n      }\r\n      bottom={\r\n        <LargeButton\r\n          id=\"equals\"\r\n          keyCodes={[13]}\r\n          value=\"=\"\r\n          onClick={handleEquals}\r\n        />\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nfunction calculate(a, b, operation) {\r\n  a = parseFloat(a);\r\n  b = parseFloat(b);\r\n\r\n  let result;\r\n  switch (operation) {\r\n    case '+':\r\n      result = a + b;\r\n      break;\r\n    case '-':\r\n      result = a - b;\r\n      break;\r\n    case 'x':\r\n      result = a * b;\r\n      break;\r\n    case '/':\r\n      result = a / b;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return result.toString();\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './style.scss';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}